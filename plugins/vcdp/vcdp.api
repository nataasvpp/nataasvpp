/* Copyright (c) 2022 Cisco and/or its affiliates. */

option version = "0.0.1";
import "vnet/ip/ip_types.api";
import "plugins/vcdp/vcdp_types.api";

autoreply autoendian define vcdp_tenant_add_del
{
  u32 client_index;
  u32 context;

  u32 tenant_id;
  u32 context_id [default=0xffffffff];
  u32 default_tenant_id [default=0xffffffff]; /* Pick up services from here */
  bool is_add;
};

autoreply autoendian define vcdp_set_services
{
  u32 client_index;
  u32 context;

  u32 tenant_id;
  vl_api_vcdp_service_chain_t dir;
  string services[];
};

autoreply autoendian define vcdp_session_add
{
  u32 client_index;
  u32 context;

  u32 tenant_id;
  vl_api_address_t src;
  vl_api_address_t dst;
  u8 protocol;
  u16 sport;
  u16 dport;
};

autoendian define vcdp_session_lookup
{
  u32 client_index;
  u32 context;

  u32 tenant_id;
  vl_api_address_t src;
  vl_api_address_t dst;
  u8 protocol;
  u16 sport;
  u16 dport;
};

autoendian define vcdp_session_lookup_reply
{
  u32 context;
  i32 retval;
  u32 client_index;

  u64 session_id;
  u32 thread_index;
  u32 tenant_id;
  u32 session_idx;
  vl_api_vcdp_session_type_t session_type;
  vl_api_ip_proto_t protocol;
  vl_api_vcdp_session_state_t state;
  f64 remaining_time;
/* Avoid service strings to keep it compact */
  u32 forward_bitmap;
  u32 reverse_bitmap;
  vl_api_vcdp_session_key_t primary_key;
  vl_api_vcdp_session_key_t secondary_key;
};

define vcdp_tenant_dump
{
  u32 client_index;
  u32 context;
};

define vcdp_tenant_details
{
  u32 context;

  u32 index;
  u32 context_id;
  u32 forward_bitmap;
  u32 reverse_bitmap;
  u32 n_timeout;
  u32 timeout[n_timeout];
};

autoreply define vcdp_set_timeout
{
  u32 client_index;
  u32 context;

  u32 tenant_id;
  u32 timeout_id;
  u32 timeout_value;
};

autoendian autoreply define vcdp_session_clear
{
  u32 client_index;
  u32 context;
};

counters vcdp_bypass {
  bypass {
    severity info;
    type counter64;
    units "packets";
    description "packets bypassed";
  };
};

counters vcdp_icmp {
  throttled {
    severity info;
    type counter64;
    units "packets";
    description "icmp error throttled";
  };
  sas_failed {
    severity error;
    type counter64;
    units "packets";
    description "no ipv4 address on interface";
  };
};

counters vcdp_lookup {
  miss {
    severity error;
    type counter64;
    units "packets";
    description "flow miss";
  };
  remote {
    severity info;
    type counter64;
    units "packets";
    description "remote flow";
  };
  con_drop {
    severity info;
    type counter64;
    units "packets";
    description "handoff drop";
  };
  no_key {
    severity info;
    type counter64;
    units "packets";
    description "not able to create 6-tuple key";
  };
};

counters vcdp_handoff {
  noerror {
    severity info;
    type counter64;
    units "packets";
    description "no error";
  };
  no_session {
    severity error;
    type counter64;
    units "packets";
    description "no session";
  };
};

counters vcdp_create {
  full_table {
    severity error;
    type counter64;
    units "packets";
    description "session table is full";
  };
  no_key {
    severity info;
    type counter64;
    units "packets";
    description "not able to create 6-tuple key";
  };
};